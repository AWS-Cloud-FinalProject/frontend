name: React CI/CD with Docker and EKS

on:
  push:
    branches:
      - doyeon-action

permissions:
  contents: write
  pull-requests: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          persist-credentials: true
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm ci

      - name: Build React app
        run: DISABLE_ESLINT_PLUGIN=true npm run build

      - name: Build Docker image
        run: |
          docker build -t ${{ secrets.ECR_REPOSITORY_URI }}/front-test:latest .

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Log in to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1

      - name: Push Docker image to ECR
        run: |
          docker push ${{ secrets.ECR_REPOSITORY_URI }}/front-test:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          persist-credentials: true
          fetch-depth: 0
          ref: doyeon-action
          clean: false

      - name: Configure AWS CLI
        run: |
          aws configure set aws_access-key-id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret-access-key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws configure set region ${{ secrets.AWS_REGION }}

      - name: Update kubeconfig for EKS
        run: |
          aws eks update-kubeconfig --name ${{ secrets.EKS_CLUSTER_NAME }}

      - name: Update image tag in deployment
        run: |
          sed -i "s|\${ECR_REPOSITORY_URI}|${{ secrets.ECR_REPOSITORY_URI }}|g" k8s/frontend-deployment.yaml

      - name: Git operations
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git config --global pull.rebase true
          git fetch origin
          git checkout doyeon-action
          git pull origin doyeon-action --rebase
          git add k8s/frontend-deployment.yaml
          git commit -m "Update image tag to latest version" || echo "No changes to commit"
          git push origin doyeon-action --force

      - name: Deploy ArgoCD Applications
        run: |
          kubectl apply -f k8s/app-of-apps.yaml -n argocd
          kubectl apply -f k8s/frontend-application.yaml -n argocd
