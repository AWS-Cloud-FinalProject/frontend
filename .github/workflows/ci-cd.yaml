name: React CI/CD with Docker and EKS

on:
  push:
    branches:
      - doyeon-action

permissions:
  contents: write # GitHub 토큰에 쓰기 권한 필요

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }} # GitHub 토큰 추가
          persist-credentials: true # 자격증명 유지

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm ci # package-lock.json 기반으로 의존성 설치

      - name: Build React app
        run: DISABLE_ESLINT_PLUGIN=true npm run build # React 앱 빌드

      - name: Build Docker image
        run: |
          docker build -t ${{ secrets.ECR_REPOSITORY_URI }}/front-test:latest .  # Docker 이미지 빌드

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Log in to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1

      - name: Push Docker image to ECR
        run: |
          docker push ${{ secrets.ECR_REPOSITORY_URI }}/front-test:latest  # ECR에 푸시

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }} # GitHub 토큰 추가
          persist-credentials: true # 자격증명 유지

      - name: Configure AWS CLI
        run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws configure set region ${{ secrets.AWS_REGION }}

      - name: Update kubeconfig for EKS
        run: |
          aws eks update-kubeconfig --name ${{ secrets.EKS_CLUSTER_NAME }}

      - name: Update image tag in deployment
        run: |
          sed -i "s|\${ECR_REPOSITORY_URI}|${{ secrets.ECR_REPOSITORY_URI }}|g" k8s/frontend-deployment.yaml

      - name: Commit and push changes
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add k8s/frontend-deployment.yaml
          git commit -m "Update image tag to latest version" || echo "No changes to commit"
          git push
